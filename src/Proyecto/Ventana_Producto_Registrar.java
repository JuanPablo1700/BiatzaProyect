/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Proyecto;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;


public class Ventana_Producto_Registrar extends javax.swing.JFrame {
    
    public String Nom_Producto="",Tipo="",Tamaño="",Descripcion="";
    
    public float Precio=0;
    
    public String Actual_Nombre_Usuario,Actual_Apellido_Usuario,Actual_Cargo;
    
    private ConeccionBD CBD = new ConeccionBD();
    Connection conectar = CBD.conectar();
    
    /**
     * Creates new form Ventana_Usuario_RegistrarUsuario
     */
    public Ventana_Producto_Registrar() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pnlCabezera = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        btnCerrarSesion = new javax.swing.JButton();
        pnlInformacion = new javax.swing.JPanel();
        txtPrecioProducto = new javax.swing.JTextField();
        txtNomProducto = new javax.swing.JTextField();
        cmbTamaño = new javax.swing.JComboBox<>();
        cmbTipoProducto = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_desc = new javax.swing.JTextArea();
        btnRegistrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1270, 583));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlFondo.setBackground(new java.awt.Color(244, 241, 222));
        pnlFondo.setMaximumSize(new java.awt.Dimension(1270, 583));
        pnlFondo.setMinimumSize(new java.awt.Dimension(1270, 583));
        pnlFondo.setPreferredSize(new java.awt.Dimension(1270, 583));
        pnlFondo.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Registrar producto");
        pnlFondo.add(jLabel7);
        jLabel7.setBounds(0, 120, 1270, 58);

        pnlCabezera.setBackground(new java.awt.Color(224, 122, 95));
        pnlCabezera.setMaximumSize(new java.awt.Dimension(1270, 66));
        pnlCabezera.setMinimumSize(new java.awt.Dimension(1270, 66));
        pnlCabezera.setPreferredSize(new java.awt.Dimension(1270, 66));
        pnlCabezera.setLayout(null);

        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblUsuario.setText("Administrador: Nombre_Usuario");
        pnlCabezera.add(lblUsuario);
        lblUsuario.setBounds(10, 20, 330, 30);

        btnCerrarSesion.setBackground(new java.awt.Color(224, 122, 95));
        btnCerrarSesion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logout.png"))); // NOI18N
        btnCerrarSesion.setText("Cerrar sesión");
        btnCerrarSesion.setBorder(null);
        btnCerrarSesion.setBorderPainted(false);
        btnCerrarSesion.setMaximumSize(new java.awt.Dimension(160, 40));
        btnCerrarSesion.setMinimumSize(new java.awt.Dimension(160, 40));
        btnCerrarSesion.setPreferredSize(new java.awt.Dimension(160, 40));
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        pnlCabezera.add(btnCerrarSesion);
        btnCerrarSesion.setBounds(1080, 15, 160, 40);

        pnlFondo.add(pnlCabezera);
        pnlCabezera.setBounds(0, 0, 1270, 66);

        pnlInformacion.setBackground(new java.awt.Color(244, 241, 222));
        pnlInformacion.setLayout(null);

        txtPrecioProducto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrecioProducto.setForeground(new java.awt.Color(102, 102, 102));
        txtPrecioProducto.setText("Precio");
        txtPrecioProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrecioProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecioProductoFocusLost(evt);
            }
        });
        pnlInformacion.add(txtPrecioProducto);
        txtPrecioProducto.setBounds(250, 70, 202, 28);

        txtNomProducto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNomProducto.setForeground(new java.awt.Color(102, 102, 102));
        txtNomProducto.setText("Nombre del producto");
        txtNomProducto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomProductoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomProductoFocusLost(evt);
            }
        });
        pnlInformacion.add(txtNomProducto);
        txtNomProducto.setBounds(250, 10, 202, 28);

        cmbTamaño.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbTamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tamaño", "Chico", "Mediano", "Grande" }));
        pnlInformacion.add(cmbTamaño);
        cmbTamaño.setBounds(20, 70, 200, 30);

        cmbTipoProducto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de producto", "Pizza", "Refresco", "Otro" }));
        pnlInformacion.add(cmbTipoProducto);
        cmbTipoProducto.setBounds(20, 10, 200, 30);

        jScrollPane1.setForeground(new java.awt.Color(102, 102, 102));

        ta_desc.setColumns(20);
        ta_desc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ta_desc.setForeground(new java.awt.Color(102, 102, 102));
        ta_desc.setRows(5);
        ta_desc.setText("Descripcion del Producto");
        ta_desc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ta_descFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ta_descFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(ta_desc);

        pnlInformacion.add(jScrollPane1);
        jScrollPane1.setBounds(20, 130, 430, 100);

        pnlFondo.add(pnlInformacion);
        pnlInformacion.setBounds(400, 200, 470, 260);

        btnRegistrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnRegistrar.setText("Registrar producto");
        btnRegistrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnRegistrar);
        btnRegistrar.setBounds(420, 460, 170, 70);

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancelar.setText("Regresar");
        btnCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnCancelar);
        btnCancelar.setBounds(680, 460, 170, 70);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        MandaInfoVPP();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNomProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomProductoFocusGained
        if(txtNomProducto.getText().equals("Nombre del producto")){
            txtNomProducto.setText("");
            txtNomProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNomProductoFocusGained

    private void txtNomProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomProductoFocusLost
        if(txtNomProducto.getText().equals("")){
            txtNomProducto.setText("Nombre del producto");
            txtNomProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtNomProductoFocusLost

    private void txtPrecioProductoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecioProductoFocusGained
        if(txtPrecioProducto.getText().equals("Precio")){
            txtPrecioProducto.setText("");
            txtPrecioProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPrecioProductoFocusGained

    private void txtPrecioProductoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecioProductoFocusLost
        if(txtPrecioProducto.getText().equals("")){
            txtPrecioProducto.setText("Precio");
            txtPrecioProducto.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPrecioProductoFocusLost

    private void ta_descFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ta_descFocusGained
        if(ta_desc.getText().equals("Descripcion del Producto")){
            ta_desc.setText("");
            ta_desc.setForeground(Color.black);
        }
    }//GEN-LAST:event_ta_descFocusGained

    private void ta_descFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ta_descFocusLost
        if(ta_desc.getText().equals("")){
            ta_desc.setText("Descripcion del Producto");
            ta_desc.setForeground(Color.black);
        }
    }//GEN-LAST:event_ta_descFocusLost

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        this.dispose();
        Ventana_Acceso VA = new Ventana_Acceso();
        VA.setVisible(true);
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if(!ValidaCaja(txtNomProducto))return;
        if(!ValidaTextArea(ta_desc))return;
        try {
            if(!ValidaPrecio(txtPrecioProducto))return;
        } catch (Exception ex) {
            Logger.getLogger(Ventana_Producto_Registrar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(!ValidaCombos(cmbTipoProducto))return;
        if(!ValidaCombos(cmbTamaño))return;
        
        if(guardar()){
            JOptionPane.showMessageDialog(null, "Datos registrados correctamente.");
            limpiarCampos();
        }else{
            JOptionPane.showMessageDialog(null, "No se registraron los datos.");
            limpiarCampos();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lblUsuario.setText(Actual_Cargo+": "+Actual_Nombre_Usuario+" "+Actual_Apellido_Usuario);
    }//GEN-LAST:event_formWindowOpened

    private void limpiarCampos(){
        cmbTipoProducto.setSelectedIndex(0);
        txtNomProducto.setText("Nombre del producto");
        cmbTamaño.setSelectedIndex(0);
        txtPrecioProducto.setText("Precio");
        ta_desc.setText("Descripcion del Producto");
    }
    
    private boolean guardar(){
        boolean estado = false;
        
        Tipo = cmbTipoProducto.getSelectedItem().toString();
        Nom_Producto = txtNomProducto.getText();
        Tamaño = cmbTamaño.getSelectedItem().toString();
        Precio = Float.parseFloat(txtPrecioProducto.getText());
        Descripcion = ta_desc.getText();
        if(DatoDuplicado()){
            JOptionPane.showMessageDialog(null, "Producto Duplicado.");
            return estado = false;
        }else{
            CBD.conectar();
            String sql = "insert into productos (Nom_Producto, Tipo, Tamaño, Precio, Descripcion) "
                + "values("
                + "'" + Nom_Producto + "',"
                + "'" + Tipo + "',"
                + "'" + Tamaño + "',"
                + Precio + ","
                + "'" + Descripcion + "'"
                + ")";
            if(CBD.ejecutar(sql)){
                estado = true;
            }
            CBD.desconectar();
        }
        return estado;
    }
    
    public boolean DatoDuplicado(){
        boolean duplicado = false;
        Tipo = cmbTipoProducto.getSelectedItem().toString();
        Nom_Producto = txtNomProducto.getText();
        Tamaño = cmbTamaño.getSelectedItem().toString();
        
        String[] Datos = new String[3];
        try {
            Connection conectar = CBD.conectar();
            Statement st = conectar.createStatement();
            ResultSet rs = st.executeQuery("SELECT Nom_Producto, Tipo, Tamaño from Productos");
            
            while (rs.next()){
                Datos[0]=rs.getString(1);
                Datos[1]=rs.getString(2);
                Datos[2]=rs.getString(3);
                
                if(Datos[0].equals(Nom_Producto) && Datos[1].equals(Tipo) && Datos[2].equals(Tamaño)) return duplicado = true;
            }
            conectar.close();    
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return duplicado;
    }
    
    private void ValidaLetras(JTextField texto)throws Exception{
        String cadena = texto.getText();
        if(cadena.equals(""))throw new Exception("Error!, llena todos los campos.");
        if(cadena.equals("Nombre del producto"))throw new Exception("Error!, llena todos los campos.");
        if(!cadena.matches("[aA-zZ,ñÑ, ,Áá,éÉ,Íí,óÓ,úÚ]*"))throw new Exception("Error, solo Letras.");
    }
    
    private void ValidaLetras(JTextArea texto)throws Exception{
        String cadena = texto.getText();
        if(cadena.equals(""))throw new Exception("Error!, llena todos los campos.");
        if(cadena.equals("Descripcion del Producto"))throw new Exception("Error!, llena todos los campos.");
        if(!cadena.matches("[aA-zZ,ñÑ, ,Áá,éÉ,Íí,óÓ,úÚ]*"))throw new Exception("Error, solo Letras.");
    }
    
    private void ValidaNumeros(JTextField valor)throws Exception{
        String precio = valor.getText();
            if(precio.equals(""))throw new Exception("Error, Ingresa la edad.");
            if(!precio.matches("[\\d]?[\\d]?[\\d]?[\\d][.]?[\\d]?[\\d]?[\\d]?"))throw new Exception("Precio invalida, solo Numeros.");
    }
    
    private boolean ValidaPrecio(JTextField valor)throws Exception{
        try{
            ValidaNumeros(valor);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
            valor.setText(""); valor.requestFocus(); return false;
        }
        
        return true;
    }
    
    private boolean ValidaCaja(JTextField caja){
        try{
            ValidaLetras(caja);
        }catch(Exception err){
            JOptionPane.showMessageDialog(this, err.getMessage());
            caja.setText(""); caja.requestFocus(); return false;
        }
        return true;
    }
    
    private boolean ValidaTextArea(JTextArea textArea){
        try{
            ValidaLetras(textArea);
        }catch(Exception err){
            JOptionPane.showMessageDialog(this, err.getMessage());
            textArea.setText(""); textArea.requestFocus(); return false;
        }
        return true;
    }
    
    private void ValidaCombo(JComboBox cmb)throws Exception{
        if(cmb.getSelectedIndex() == 0)throw new Exception("Combo invalido, Selecciona un combo.");
    }
    
    private boolean ValidaCombos(JComboBox combo){
        try{
            ValidaCombo(combo);
        }catch(Exception err){
            JOptionPane.showMessageDialog(this, err.getMessage());
            combo.requestFocus(); return false;
        }
        return true;
    }
    
    private void MandaInfoVPP(){
        Ventana_Producto_Principal VPP = new Ventana_Producto_Principal();
        VPP.Actual_Nombre_Usuario=Actual_Nombre_Usuario;
        VPP.Actual_Apellido_Usuario=Actual_Apellido_Usuario;
        VPP.Actual_Cargo=Actual_Cargo;
        this.dispose();
        VPP.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Producto_Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Producto_Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Producto_Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Producto_Registrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Producto_Registrar().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbTamaño;
    private javax.swing.JComboBox<String> cmbTipoProducto;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPanel pnlCabezera;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlInformacion;
    private javax.swing.JTextArea ta_desc;
    private javax.swing.JTextField txtNomProducto;
    private javax.swing.JTextField txtPrecioProducto;
    // End of variables declaration//GEN-END:variables
}
